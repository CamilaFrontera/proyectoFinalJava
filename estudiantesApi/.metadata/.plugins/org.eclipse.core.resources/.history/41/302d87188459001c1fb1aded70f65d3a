package com.ApiEstudiantes.app.controller;

import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.ApiEstudiantes.app.model.Student;
import com.ApiEstudiantes.app.service.StudentService;

@RestController
@RequestMapping("/api/students")
public class StudentController {
	
	 @Autowired
	private StudentService studentService;
	 
	 //Create
	 @PostMapping
	 public ResponseEntity<?> create (@RequestBody Student student){
		 return ResponseEntity.status(HttpStatus.CREATED).body(studentService.save(student));
	 }
	 
	 //Read
	 @GetMapping("/{id}")
	 public ResponseEntity<?> read(@PathVariable(value = "id") Integer studentId){
		 Optional<Student> oStudent = studentService.findById(studentId);
		 
		 if(!oStudent.isPresent()) {
			 return ResponseEntity.notFound().build();
		 }
		 return ResponseEntity.ok(oStudent);
	 }
	 
	 //Update
	 @PutMapping("/{id}")
	 public ResponseEntity<?> update (@RequestBody Student studentDetails, @PathVariable Integer studentId){
		 Optional<Student> student = studentService.findById(studentId);
		 if(!student.isPresent()) {
			 return ResponseEntity.notFound().build();
		 }
		 student.get().setName(studentDetails.getName());
		 student.get().setLastName(studentDetails.getLastName());
		 student.get().setEmail(studentDetails.getEmail());
		 student.get().setAvatar(studentDetails.getAvatar());
		 student.get().setBirthday(studentDetails.getBirthday());
		 
		 return ResponseEntity.status(HttpStatus.CREATED);
	 }
	 
	 
	 //Delete
	 

}
